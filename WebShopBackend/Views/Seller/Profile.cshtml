@model WebShopBackend.ViewModels.RegisterViewModel
@{
    ViewBag.Title = "Profile";
}

<h2>Profile of seller</h2>

<div class="d-flex justify-content-center align-items-center" style="height: 100vh; margin-top: 30px">
    <div class="card" style="width: 300px; margin: auto">
        <div class="card-body">
            <h2 class="card-title text-center">Profile</h2>
            @using (Html.BeginForm("UpdateProfile", "Auth", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group" style="display: flex; flex-direction:column;">
                    @Html.LabelFor(m => m.Username, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <div class="input-group-append">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", id = "usernameInput" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group" style="display: flex; flex-direction:column;">
                    @Html.LabelFor(m => m.Password, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group date">
                        <div class="input-group-append">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", id = "passwordInput" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group" style="display: flex; flex-direction:column;">
                    @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group date">
                        <div class="input-group-append">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", id = "nameInput" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group" style="display: flex; flex-direction:column;">
                    @Html.LabelFor(m => m.Surname, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group date">
                        <div class="input-group-append">
                            @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control", id = "surnameInput" } })
                            @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group" style="display: flex; flex-direction:column;">
                    @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group date">
                        <div class="input-group-append">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", id = "emailInput" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary btn-block">Submit</button>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            var products = null;
            getLoggedUser();

            function getLoggedUser() {
                $.get("/Auth/GetLoggedUser", function (data) {
                    var usernameInput = document.getElementById("usernameInput");
                    usernameInput.value = data.Username;
                    var passwordInput = document.getElementById("passwordInput");
                    passwordInput.value = data.Password;
                    var nameInput = document.getElementById("nameInput");
                    nameInput.value = data.Name;
                    var surnameInput = document.getElementById("surnameInput");
                    surnameInput.value = data.Surname;
                    var emailInput = document.getElementById("emailInput");
                    emailInput.value = data.Email;
                });
            }
        })
    </script>
}