@model WebShopBackend.ViewModels.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<div class="d-flex justify-content-center align-items-center" style="height: 100vh; margin-top: 30px">
    <div class="card" style="width: 300px; margin: auto">
        <div class="card-body" >
            <h2 class="card-title text-center">Register</h2>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group"  style="display: flex; flex-direction:column;">
                    @Html.LabelFor(m => m.Username, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <div class="input-group-append">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group" style="display: flex; flex-direction:column;">
                    @Html.LabelFor(m => m.Password, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group date">
                        <div class="input-group-append">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group" style="display: flex; flex-direction:column;">
                    @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group date">
                        <div class="input-group-append">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group" style="display: flex; flex-direction:column;">
                    @Html.LabelFor(m => m.Surname, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group date">
                        <div class="input-group-append">
                            @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="form-group" style="display: flex; flex-direction:column;">
                    @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group date">
                        <div class="input-group-append">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group" style="display: flex; flex-direction:column;">
                    @Html.LabelFor(m => m.Birthdate, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group date">
                        <div class="input-group-append">
                            @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })

                        </div>
                    </div>
                </div>

                <div class="form-group" style="display: flex; flex-direction:column;">
                    @Html.LabelFor(m => m.Gender, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group date">
                        <div class="input-group-append">
                            @Html.DropDownListFor(model => model.Gender, Enum.GetValues(typeof(WebShopBackend.Models.Gender)).Cast<WebShopBackend.Models.Gender>().Select(e => new SelectListItem
                            {
                                Text = e.ToString(),
                                Value = e.ToString()
                            }), "-- Select Gender --", new { @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="form-group">
                    <button type="submit" class="btn btn-primary btn-block">Register</button>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            $('.datepicker').datepicker({
                format: 'yyyy-mm-dd',
                autoclose: true,
                todayHighlight: true
            });
        });
    </script>
}





